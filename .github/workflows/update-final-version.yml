name: Update final version

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]
    branches: master
  workflow_dispatch:
    inputs:
      number:
        description: Pull Request number
        required: true

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Get Pull Request
        id: pull-request
        uses: actions/github-script@v3
        with:
          script: |
            let pullRequest = null;
            if (context.payload.inputs && context.payload.inputs.number) {
              // find Pull Request by number fom input
              const number = context.payload.inputs.number;
              try {
                pullRequest = (await github.pulls.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: number,
                })).data;
              } catch(e) {
                core.error(`Cannot get Pull Request #${number}: ${e}`);
                return;
              }
            } else {
              // get Pull Request from event payload
              pullRequest = context.payload.pull_request;
            }
            if (!pullRequest) {
              core.error(`Cannot find Pull Request`);
              return;
            }
            
            // Stop if Pull Request branch name does not start with `release`
            const branch = pullRequest.head.ref;
            const base = pullRequest.base.ref;
            if (!branch.startsWith('release') || base !== 'master') {
              core.info(`This is not a release branch ${branch} targeting master, skipping`);
              return;
            }
            core.setOutput('branch', branch);
            core.setOutput('base', base);
            core.setOutput('number', pullRequest.number);
            core.setOutput('url', pullRequest.html_url);
            core.setOutput('body', pullRequest.body);
            core.setOutput('suffix', `[#${pullRequest.number}](${pullRequest.html_url})`);
            return true;

      - name: Checkout Pull Request branch
        if: steps.pull-request.outputs.result
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.pull-request.outputs.branch }}
          token: ${{ secrets.ACTIONS_GIT_TOKEN }}

      - name: Set up Node.js
        if: steps.pull-request.outputs.result
        uses: actions/setup-node@v3
        with:
          registry-url: https://registry.npmjs.org/
          node-version: 16

      - name: Get current version
        if: steps.pull-request.outputs.result
        id: remove-suffix-version
        uses: actions/github-script@v3
        with:
          script: |
           const fs = require('fs');
           let content = fs.readFileSync('package.json', 'utf-8');
           const json = JSON.parse(content);
           if (!json.version.match('-')) {
              core.info(`Current version is already final ${json.version}`);
              return;
           }
           
           json.version = json.version.split('-')[0];
           content = JSON.stringify(json, null, '  ');
           fs.writeFileSync('package.json', content, 'utf-8');
           
           return true;

      - name: Commit new version
        if: steps.remove-suffix-version.outputs.result
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Bump final version"
          git push -f
